{
    "C4": {
        "Differences_Between_Domains": "There are differences between the worlds of the legal domain and software development",
        "Copyleft": "Issues arise around the use of licenses with copyleft/viral terms",
        "License_Philosophy": "Issues stem from a particular licensing philosophy held by either the respondent or their organization",
        "Government_Systems": "Problems arise when working with government systems.\u00a0 Particularly due to regulations and processes that are in place",
        "Not_Applicable": "The question is not applicable to the respondent",
        "Unapproved_Licenses": "Using software that is licensed under something that is not on a list of pre-approved licenses is difficult for procedural reasons.",
        "Exploitation_by_Big_Tech": "It can be difficult to license software in a way that it will not be exploited by big tech companies",
        "Employer_or_University_Ownership_Claims": "Ownership claims made by an employer or university (functionally an employer) can raise licensing challenges for developers and creatives",
        "Dependency_License_Change": "A dependency changes its license to something that is no longer compatible with the developer's project",
        "Licensing_Considerations_Happen_After_Development": "Licensing decisions are only taken into account after development, which can result in challenges and issues",
        "Manual_Analysis_of_Dependency_Licenses": "A manual analysis of dependency licenses can be time consuming and challenging",
        "Understanding_License_Terms": "It can be a challenge to understand license terms",
        "Choosing_a_License": "Choosing a license can be a challenging task",
        "Unclear_Licensing_Rights": "It may not be immediately obvious who has the right to license a particular piece of software",
        "Contributing_to_OSS_under_contract": "The interplay between OSS contributions and proprietary work while under contract can be difficult",
        "Too_much_work": "Keeping track of licensing is just too much work"
    },
    "P3": {
        "Revert_to_Old_Version": "The solution to a license change involves reverting to an old version, at least for a time",
        "Hasn't_Occurred_or_Unsure": "The respondent has not had the scenario described occur or is unsure about the question",
        "Low_Technical_Effort": "The solution to licensing challenges are often trivial, at least from a software development perspective",
        "Solution_is_Readily_Apparent": "The solution to licensing problems are typically pretty easy to arrive at quickly",
        "Depends_on_Context": "The effort or time spent resolving licensing issues is largely context dependent, which includes the particular problem being addressed, the codebase in question, and the jurisdiction of the developer/organization",
        "Requires_Research": "Often manual research is required to resolve licensing challenges",
        "Search_for_Alternative": "The solution to licensing challenges often involves searching for suitable alternatives under licenses more appropriate to the context",
        "Ask_for_License_Exception": "The solution to licensing challenges may involve asking dependency maintainers for a license exception",
        "Develop_Inhouse_Alternative": "Sometimes license compliance issues are resolved by developing an in-house alternative to a component with an incompatible license",
        "Must_Understand_Licenses": "It all begins with understanding licenses and their terms",
        "Legal_Team": "The legal team is involved in the process",
        "Stop_Using_Component": "The respondent stopped using a software component due to factors stemming from licensing.",
        "Is_not_Addressed": "Respondent indicates that licensing issues can be left unaddressed.",
        "Identifying_Dependencies": "Addressing the issue requires identifying or verifying your software dependencies.",
        "Purchase_License": "Purchasing a license is a means of solving licensing issues",
        "License_Summaries": "License summaries are helpful in resolving licensing issues",
        "Organizational_Policies": "Requires referencing organizational policies",
        "Find_Answer_On_Own": "The participant is able to answer licensing questions through their own research, without needing legal experts or other help",
        "Issues_Arise": "Respondent only agrees that issues arise during development",
        "Contracts": "The answer to the issue might depend on specific contracts",
        "Escalate_to_Manager": "Licensing problems are escalated to the project manager or some equivalent"
    },
    "TU2": {
        "Ensure_License_Compatibility": "Tools are useful in ensuring the compatibility of dependency licenses",
        "Gathering_Licenses": "Tooling is good for collecting licenses from all dependencies",
        "Bad_Answer": "The answer is nonsensical or too ambiguous to be interpreted accurately",
        "Information_on_Transitive_Dependencies": "Licensing tools can provide transparency and information about transitive dependencies",
        "Detect_Problematic_Dependencies": "Licensing tools can help pick out or detect troubling or problematic dependencies",
        "Detect_Dependency_License_Problems": "Tools can help detect licensing problems with respect to a project's dependencies",
        "Generation_of_Licensing_Terms": "Tooling can generate license terms that can be copy/pasted by the developer",
        "Q&A": "Licensing tools can be used to find answers to license related questions",
        "Choosing_a_License": "Tools can help facilitate the process of license selection",
        "Provide_Overview_of_Licenses": "Tools can provide an overview of licenses that are available to a developer"
    },
    "TU3": {
        "Setting_Up_Continuous_Integration": "Setting up continuous integration has been a problem with licensing tools",
        "Cumbersome_or_Hard_to_Use": "Tools are cumbersome, unwieldy, or otherwise hard to use",
        "Missing_Details": "The outputs of licensing tools may be missing details due to incorrect scans or just a high level of abstraction",
        "Unclear_Impact_of_License": "The impact of licensing decisions is still unclear for developers when using tools",
        "Not_Applicable": "The respondent has no experience with challenges encountered when using licensing tools",
        "Not_Interactive": "Licensing tools are missing an interactive component"
    },
    "TU5": {
        "Unsure": "Respondent is unsure of any features they would want included in licensing tools",
        "Breach_Detection": "Functionality that would allow for the crawling of GitHub repositories (or other forges) looking for projects that are breaching your license",
        "Fine_Grained_Analysis": "Tools that provide more than just high level analysis of licensing information",
        "License_Descriptions": "Tools should include brief descriptions of licenses",
        "Alerts": "Licensing tools should provide alerts when licensing problems are detected",
        "Alternative_Recommendation": "Licensing tools should help recommend alternate dependencies that would compliant with the current project",
        "Project_Statistics": "Licensing tools should provide licensing/dependency related project statistics",
        "Chat_Bot_Functionality": "Tools should include reliable and accurate chat bot functionality",
        "None": "The respondent views licensing tools as complete/cannot identify any features they wish would be added",
        "Decision_Making": "Assist with making licensing decisions, e.g. with a decision tree"
    }
}